statements:
  - statement:
      class: Stmt.Class
      name: Foo
      superClass: object
      members:
        - member:
            class: Stmt.Var
            name: x
            type: int
            initializer:
              class: Expr.Literal
              value: 0
        - member:
            class: Stmt.Function
            name: set
            params:
              - param:
                  class: Stmt.Var
                  name: self
                  type: Foo
                  initializer: None
              - param:
                  class: Stmt.Var
                  name: x
                  type: int
                  initializer: None
            returnType: object
            body:
              - statement:
                  class: Stmt.Expression
                  expr:
                    class: Expr.MultiAssign
                    targets:
                      - target:
                          class: Expr.Get
                          object:
                            name: self
                          name: x
                    value:
                      class: Expr.Variable
                      name: x
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.MultiAssign
        targets:
          - target:
              class: Expr.Variable
              name: f
        value:
          class: Expr.Call
          callee:
            class: Expr.Variable
            name: Foo
          arguments: []
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.Call
        callee:
          class: Expr.Get
          object:
            class: Expr.Variable
            name: f
          name: set
        arguments:
          - argument:
              class: Expr.Literal
              value: 1
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.Print
        expr:
          class: Expr.Get
          object:
            class: Expr.Variable
            name: f
          name: x
