statements:
  - statement:
      class: Stmt.Var
      name: s
      type: str
      initializer:
        class: Expr.Literal
        value: ""
  - statement:
      class: Stmt.Var
      name: l
      type: int
      initializer:
        class: Expr.Literal
        value: 0
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.Assign
        target:
          class: Expr.Variable
          name: s
        value:
          class: Expr.Input
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.Assign
        target:
          class: Expr.Variable
          name: l
        value:
          class: Expr.Len
          expr:
            class: Expr.Variable
            name: s
  - statement:
      class: Stmt.While
      condition:
        class: Expr.Binary
        left:
          class: Expr.Len
          expr:
            class: Expr.Variable
            name: s
        operator: ">"
        right:
          class: Expr.Literal
          value: 0
      body:
        - statement:
            class: Stmt.Expression
            expr:
              class: Expr.Print
              expr:
                class: Expr.Variable
                name: s
        - statement:
            class: Stmt.Expression
            expr:
              class: Expr.Assign
              target:
                class: Expr.Variable
                name: s
              value:
                class: Expr.Input
