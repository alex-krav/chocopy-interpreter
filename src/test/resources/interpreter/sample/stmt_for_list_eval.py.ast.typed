statements:
  - statement:
      class: Stmt.Var
      name: x
      type: int
      initializer:
        class: Expr.Literal
        inferredType: int
        value: 0
  - statement:
      class: Stmt.Var
      name: z
      type: [int]
      initializer:
        class: Expr.Literal
        inferredType: <None>
        value: None
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.MultiAssign
        targets:
          - target:
              class: Expr.Variable
              inferredType: [int]
              name: z
        value:
          class: Expr.Listing
          inferredType: [int]
          elements:
            - element:
                class: Expr.Literal
                inferredType: int
                value: 1
            - element:
                class: Expr.Literal
                inferredType: int
                value: 2
            - element:
                class: Expr.Literal
                inferredType: int
                value: 3
  - statement:
      class: Stmt.For
      identifier:
        class: Expr.Variable
        inferredType: int
        name: x
      iterable:
        class: Expr.Variable
        inferredType: [int]
        name: z
      body:
        - statement:
            class: Stmt.Expression
            expr:
              class: Expr.MultiAssign
              targets:
                - target:
                    class: Expr.Variable
                    inferredType: [int]
                    name: z
              value:
                class: Expr.Listing
                inferredType: <Empty>
                elements: []
        - statement:
            class: Stmt.Expression
            expr:
              class: Expr.Print
              expr:
                class: Expr.Variable
                inferredType: int
                name: x
