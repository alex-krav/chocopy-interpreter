statements:
  - statement:
      class: Stmt.Class
      name: A
      superClass: object
      members:
        - member:
            class: Stmt.Var
            name: a
            type: int
            initializer:
              class: Expr.Literal
              inferredType: int
              value: 42
  - statement:
      class: Stmt.Class
      name: B
      superClass: A
      members:
        - member:
            class: Stmt.Var
            name: b
            type: bool
            initializer:
              class: Expr.Literal
              inferredType: bool
              value: true
        - member:
            class: Stmt.Function
            name: __init__
            params:
              - param:
                  class: Stmt.Var
                  name: self
                  type: B
                  initializer: None
            returnType: <None>
            body:
              - statement:
                  class: Stmt.Expression
                  expr:
                    class: Expr.Print
                    expr:
                      class: Expr.Literal
                      inferredType: str
                      value: "B"
  - statement:
      class: Stmt.Var
      name: a
      type: A
      initializer:
        class: Expr.Literal
        inferredType: <None>
        value: None
  - statement:
      class: Stmt.Var
      name: b
      type: B
      initializer:
        class: Expr.Literal
        inferredType: <None>
        value: None
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.MultiAssign
        targets:
          - target:
              class: Expr.Variable
              inferredType: A
              name: a
          - target:
              class: Expr.Variable
              inferredType: B
              name: b
        value:
          class: Expr.Call
          inferredType: B
          callee:
            class: Expr.Variable
            inferredType: [B] -> <None>
            name: B
          arguments: []
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.MultiAssign
        targets:
          - target:
              class: Expr.Set
              object:
                class: Expr.Variable
                inferredType: B
                name: b
              name: a
        value:
          class: Expr.Literal
          inferredType: int
          value: 1
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.MultiAssign
        targets:
          - target:
              class: Expr.Set
              object:
                class: Expr.Variable
                inferredType: B
                name: b
              name: b
        value:
          class: Expr.Literal
          inferredType: bool
          value: false
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.Print
        expr:
          class: Expr.Get
          inferredType: int
          object:
            class: Expr.Variable
            inferredType: A
            name: a
          name: a
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.Print
        expr:
          class: Expr.Get
          inferredType: int
          object:
            class: Expr.Variable
            inferredType: B
            name: b
          name: a
  - statement:
      class: Stmt.Expression
      expr:
        class: Expr.Print
        expr:
          class: Expr.Get
          inferredType: bool
          object:
            class: Expr.Variable
            inferredType: B
            name: b
          name: b
