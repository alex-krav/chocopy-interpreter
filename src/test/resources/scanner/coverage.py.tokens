IDENTIFIER count
COLON :
INT_TYPE
EQUAL =
NUMBER 0
NEWLINE
DEF
IDENTIFIER foo
LEFT_PAREN (
IDENTIFIER s
COLON :
STR_TYPE
RIGHT_PAREN )
ARROW ->
INT_TYPE
COLON :
NEWLINE
INDENT
RETURN
LEN_NATIVE_FUN
LEFT_PAREN (
IDENTIFIER s
RIGHT_PAREN )
NEWLINE
DEDENT
CLASS
IDENTIFIER bar
LEFT_PAREN (
OBJECT_TYPE
RIGHT_PAREN )
COLON :
NEWLINE
INDENT
IDENTIFIER p
COLON :
BOOL_TYPE
EQUAL =
TRUE
NEWLINE
DEF
IDENTIFIER baz
LEFT_PAREN (
SELF
COLON :
IDSTRING "bar"
COMMA ,
IDENTIFIER xx
COLON :
LEFT_BRACKET [
INT_TYPE
RIGHT_BRACKET ]
RIGHT_PAREN )
ARROW ->
STR_TYPE
COLON :
NEWLINE
INDENT
GLOBAL
IDENTIFIER count
NEWLINE
IDENTIFIER x
COLON :
INT_TYPE
EQUAL =
NUMBER 0
NEWLINE
IDENTIFIER y
COLON :
INT_TYPE
EQUAL =
NUMBER 1
NEWLINE
DEF
IDENTIFIER qux
LEFT_PAREN (
IDENTIFIER y
COLON :
INT_TYPE
RIGHT_PAREN )
ARROW ->
OBJECT_TYPE
COLON :
NEWLINE
INDENT
NONLOCAL
IDENTIFIER x
NEWLINE
IF
IDENTIFIER x
GREATER >
IDENTIFIER y
COLON :
NEWLINE
INDENT
IDENTIFIER x
EQUAL =
MINUS -
NUMBER 1
NEWLINE
DEDENT
DEDENT
FOR
IDENTIFIER x
IN
IDENTIFIER xx
COLON :
NEWLINE
INDENT
SELF
DOT .
IDENTIFIER p
EQUAL =
IDENTIFIER x
EQUAL_EQUAL ==
NUMBER 2
NEWLINE
DEDENT
IDENTIFIER qux
LEFT_PAREN (
NUMBER 0
RIGHT_PAREN )
NEWLINE
IDENTIFIER count
EQUAL =
IDENTIFIER count
PLUS +
NUMBER 1
NEWLINE
WHILE
IDENTIFIER x
LESS_EQUAL <=
NUMBER 0
COLON :
NEWLINE
INDENT
IF
SELF
DOT .
IDENTIFIER p
COLON :
NEWLINE
INDENT
IDENTIFIER xx
LEFT_BRACKET [
NUMBER 0
RIGHT_BRACKET ]
EQUAL =
IDENTIFIER xx
LEFT_BRACKET [
NUMBER 1
RIGHT_BRACKET ]
NEWLINE
SELF
DOT .
IDENTIFIER p
EQUAL =
NOT
SELF
DOT .
IDENTIFIER p
NEWLINE
IDENTIFIER x
EQUAL =
IDENTIFIER x
PLUS +
NUMBER 1
NEWLINE
DEDENT
ELIF
IDENTIFIER foo
LEFT_PAREN (
IDSTRING "Long"
LEFT_BRACKET [
NUMBER 0
RIGHT_BRACKET ]
RIGHT_PAREN )
EQUAL_EQUAL ==
NUMBER 1
COLON :
NEWLINE
INDENT
RETURN
SELF
IS
NONE
NEWLINE
DEDENT
DEDENT
RETURN
IDSTRING "Nope"
NEWLINE
DEDENT
DEDENT
PRINT_NATIVE_FUN
LEFT_PAREN (
IDENTIFIER bar
LEFT_PAREN (
RIGHT_PAREN )
DOT .
IDENTIFIER baz
LEFT_PAREN (
LEFT_BRACKET [
NUMBER 1
COMMA ,
NUMBER 2
RIGHT_BRACKET ]
RIGHT_PAREN )
RIGHT_PAREN )
NEWLINE
EOF
